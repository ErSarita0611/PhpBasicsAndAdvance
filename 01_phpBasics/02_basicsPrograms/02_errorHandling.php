

<?php

// Ways to handle PHP Errors:  

// Using die() method
// Custom Error Handling
/* Basic error handling: Using die() function The die() function print a message and exit 
from current script.*/

// PHP code to check errors
 
// If file is not present 
// then exit from script
if( !file_exists("geeks.txt") ) {
    die("File is not present");
}
 
// If file is present
// then continue
else {
    $file = fopen("geeks.txt", "w");
}




// Parameters: This function accepts five parameters as mentioned above and described below:  

// 1. $error_level: It is required parameter and it must be an integer. There are predefined error levels.
// 2. $error_message: It is required parameter and it is the message which user want to print.
// 3. $error_file: It is optional parameter and used to specify the file in which error has been occurred.
// 4. $error_line: It is optional parameter and used to specify the line number in which error has been occurred.
/* 5. $error_context: It is optional parameter and used to specify an array containing every variable and 
their value when error has been occurred.*/



// error_level: These are the possible error level which are listed below: 

// 1 : .E_ERROR :fatal runtime error execution of script has been halted
// 2 : E_WARNING :non fatal runtime error execution of script has been halted
// 4 : E_PARSE :compile time error it is generated by the parser
// 8 :E_NOTICE :The script found something that might be an error
// 16 :E_CORE_ERROR :Fatal errors that occurred during initial startup of script
// 32 :E_CORE_WARNING :Non fatal errors that occurred during initial startup of script
// 8191 :E_ALL :All errors and warning



/*set_error_handler() Function: After creating myerror() function need to set custom error handler 
because in normal way PHP handles it but if user doing custom error handling then user have to set
 it in place of argument and pass out myerror function as a string.*/

 // Creates my error function which prints message
//to user
function myerror($error_no, $error_msg) {
    echo "Error: [$error_no] $error_msg ";
    echo "\n Now Script will end";
     
    // When error occurred script has to be stopped
    die();
} 
 
// Setting set_error_handler
set_error_handler("myerror");
 
$a = 10;
$b = 0;
 
// This will generate error
echo($a / $b);;

?>